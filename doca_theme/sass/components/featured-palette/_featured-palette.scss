// Featured palette
//
// Colour palette for the featured content
//
// Markup: featured-palette.html
//
// .subsite__stay-smart-online - Stay Smart Online featured content.
// .subsite__bureau-communications-research  - Research featured content.
// .subsite__digital-business   - Digital Business featured content.
//
// Styleguide components.featured-palette

@import 'components/palette/palette';
@import 'components/subsite-palette/subsite-palette';

$featured-palette__subsite: () !default;

@function featured-palette__add-subsite($subsite-palette) {

  $lightest: palette($subsite-palette, background-light);
  $darkest:  palette($subsite-palette, background-dark);

  $this-featured-palette: (
    1: (
      background: $lightest
    ),
    2: (
      background: mix($lightest, $darkest, 60%),
    ),
    3: (
      background: mix($lightest, $darkest, 40%),
    ),
    4: (
      background: mix($lightest, $darkest, 20%),
    ),
    5: (
      background: $darkest,
    ),
    6: (
      background: mix($lightest, $darkest, 80%),
    ),
  );

  @return map-merge($featured-palette__subsite, $this-featured-palette);
}

@mixin feature-palette-apply($subsite, $palette) {
  $default-featured-palette: featured-palette__add-subsite(map-get($palette, $subsite));

  // Get color contrast of darkest nth-child for foreground
  $foreground: color-contrast(palette($default-featured-palette, 6 background));

  .featured-palette {

    &,
    a {
      color: $foreground;
      &:hover,
      &:visited,
      &:link {
        color: $foreground;
      }
    }

    @for $i from 1 through length($default-featured-palette) {
      $background: palette($default-featured-palette, $i background);
      > :nth-child(#{$i}n) {
        background-color: $background;
      }
    }

  }
  .featured-palette__wrapper {
    background-color: palette($default-featured-palette, 6 background);
  }
}

$default-palette: (
  default: (
    background-light: #0a2e44,
    background-dark: #0f405e,
  ),
);

@include feature-palette-apply(default, $default-palette);

@each $subsite, $palette in $subsite-palette {
  .subsite__#{$subsite} {
    @include feature-palette-apply($subsite, $subsite-palette);
  }
}

